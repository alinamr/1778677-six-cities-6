openapi: 3.0.0
info:
  title: API сервер для демо-проекта «Шесть городов».
  description: Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: offers
    description: Действия с предложениями по аренде.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля
      responses:
        "200":
          description: Успешная авторизация.
        "401":
          description: Неверный логин или пароль.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      responses:
        "200":
          description: Информация о пользователе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "401":
          description: Пользователь не авторизован.

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.
      responses:
        "200":
          description: Аватар пользователя загружен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "401":
          description: Пользователь не авторизован.

  /offers:
    get:
      tags:
        - offers
      summary: Получить список предложений по аренде.
      responses:
        '200':
          description: Список предложений
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers'
        '503':
          description: Сервер недоступен.
    post:
      summary: Создание нового предложения
      tags:
        - offers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'
      responses:
        '200':
          description: Новое предложение по аренде создалось
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '401':
          description: Сервер недоступен.


  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получить подробную инфорацию о предложении по аренде
      parameters:
        - name: offerId
          in: path
          required: true
          description: Идентификатор предложения
          schema:
            type: string
            example: 6329c3d6a04ab1061c6725ea
      responses:
        '200':
          description: Предложение по аренде
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '404':
          description: Данного предложения не существует
    delete:
      summary: Удаление предложения по аренде
      tags:
        - offers
      parameters:
        - name: offerId
          in: path
          required: true
          description: Идентификатор предложения
          schema:
            type: string
            example: 6329c3d6a04ab1061c6725ea
      responses:
        '200':
          description: Предложение по аренде удалено
          content:
            application/json: {}
        '401':
          description: Данного предложения не существует
    put:
      tags:
        - offers
      summary: Изменение предложения по аренде
      parameters:
        - name: offerId
          in: path
          required: true
          description: Идентификатор предложения
          schema:
            type: string
            example: 6329c3d6a04ab1061c6725ea
      responses:
        '200':
          description: Изменено предложение по аренде
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '404':
          description: Данного предложения не существует

  /offers/{offerId}/comments:
    get:
      tags:
        - comments
      summary: Получение списка комментариев для предложения по аренде
      parameters:
        - name: offerId
          in: path
          required: true
          description: Идентификатор предложения
          schema:
            type: string
            example: 6329c3d6a04ab1061c6725ea
      responses:
        '200':
          description: Список получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comments'
        '404':
          description: Данного предложения не существует
    post:
      summary: Создание нового комментария
      tags:
        - comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
      responses:
        '200':
          description: Новое комментарий создался
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
        '401':
          description: Сервер недоступен.

  /offers/premium:
    get:
      tags:
        - offers
      summary: Получить премиальные предложения для выбранного города
      parameters:
        - name: city
          in: query
          required: true
          description: Название города
          schema:
            type: string
      responses:
        '200':
          description: Список премиальных предложений по аренде
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

  /users/{userId}/favorites:
    get:
      tags:
        - users
      summary: Список избранных предложений пользователя
      parameters:
        - name: userId
          in: path
          required: true
          description: Идентификатор пользователя
          schema:
            type: string
      responses:
        '200':
          description: Список избранных предложений пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

  /users/{userId}/favorites/{offerId}:
    post:
      tags:
        - users
      summary: Добавить предложение в избранное
      parameters:
        - name: userId
          in: path
          required: true
          description: Идентификатор пользователя
          schema:
            type: string
        - name: offerId
          in: path
          required: true
          description: Идентификатор предложения
          schema:
            type: string
      responses:
        '201':
          description: Предложение добавлено в избранное

    delete:
      tags:
        - users
      summary: Удалить предложение из избранного
      responses:
        '204':
          description: Предложение удалено из избранного

components:
  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: alina@mail.ru

        name:
          type: string
          example: Alina

        password:
          type: string
          example: 123456

    user:
      type: object

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        email:
          type: string
          example: alina@mail.ru

        userType:
          type: string
          enum: [Regular, Pro]
          example: Pro

    offer:
      type: object
      properties:
        title:
          type: string
          minLength: 10
          maxLength: 100
          example: Уютная квартира в центре города

        description:
          type: string
          minLength: 20
          maxLength: 1024
          example: Прекрасная квартира с видом на сад, цветущий круглый год.

        publishDate:
          type: string
          format: date-time
          example: 2024-02-15T15:00:00+3

        city:
          type: string
          enum: [Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf]
          example: Paris

        previewImage:
          type: string
          format: uri
          example: test.jpg

        images:
          type: array
          items:
            type: string
            format: uri

        isPremium:
          type: boolean
          example: false

        isFavorites:
          type: boolean
          example: true

        rating:
          type: number
          format: float
          minimum: 1
          maximum: 5
          example: 4.5

        type:
          type: string
          enum: [apartment, house, room, hotel]
          example: house

        rooms:
          type: integer
          minimum: 1
          maximum: 8
          example: 3

        maxAdults:
          type: integer
          minimum: 1
          maximum: 10
          example: 4

        price:
          type: integer
          minimum: 100
          maximum: 100000
          example: 34600

        goods:
          type: array
          items:
            type: string
            enum: [ Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridgel]

        userId:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        commentsCount:
          type: integer
          example: 45

        coordinates:
          type: object
          properties:
            latitude:
              type: number
              format: float
              example: 48.85661
            longitude:
              type: number
              format: float
              example: 2.351499

    offers:
      type: array
      items:
        $ref: '#/components/schemas/offer'

    comment:
      type: object

      properties:
        comment:
          type: string
          example: Отличные апартаменты

        postDate:
          type: string
          format: date-time
          example: 2024-02-15T15:00:00+3

        rating:
          type: number
          example: 2

        userId:
          type: string
          example: 6329c3d6a04ab1061c6425ea

    comments:
      type: array
      items:
        $ref: '#/components/schemas/comment'
